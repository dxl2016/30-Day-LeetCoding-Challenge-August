# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def verticalTraversal(self, root: TreeNode) -> List[List[int]]:
        def dfs(node, x, y):
            if node:
                if x not in res:
                    res[x] = {y:[node.val]}
                    
                else:
                    if y not in res[x]:
                        res[x][y] = [node.val]
                    else:
                        res[x][y] += [node.val]
                
                dfs(node.left, x-1, y-1)
                dfs(node.right, x+1, y-1)
        
        res = {}
        dfs(root, 0, 0)
        res = sorted(res.items())
        # print(res)
        ans = []
        for each in res:
            result = []
            tmp = sorted(each[1].items(), reverse=True)
            for i in tmp:
                result.extend(sorted(i[1]))
            ans.append(result)
        
        return ans

